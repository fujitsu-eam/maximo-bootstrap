- name: Wait for ROSA to be ready and install MAS
  hosts: localhost
  vars:
    rosa_cluster_name: "{{ lookup('env', 'FUJ_ROSA_CLUSTER_NAME') }}"
    mas_bucket_name: "{{ lookup('env', 'FUJ_MAS_BUCKET_NAME') }}"
    entitlement_secret: "{{ lookup('env', 'FUJ_MAS_ENT_SECRET') }}"
    mas_domain_name: "{{ lookup('env', 'FUJ_MAS_DOMAIN') }}"
    cert_subject: "{{ lookup('env', 'FUJ_CERT_SUBJECT') }}"
    mas_instance_name: "{{ lookup('env', 'FUJ_MASINSTANCE_ID') }}"
  connection: local
  gather_facts: false
  tasks:
    - name: Check for ROSA installer completion
      ansible.builtin.shell: /usr/local/bin/rosa describe cluster -c {{ rosa_cluster_name }} | grep ^State:|awk '{print $2}'
      register: _r_rosa_installer_status
      until: _r_rosa_installer_status.stdout.find("ready") != -1
      retries: 60
      delay: 60

    - name: Pause for 5 minutes for cluster to stabilise
      ansible.builtin.pause:
        minutes: 15

    - name: Create ROSA cluster-admin user
      ansible.builtin.shell: /usr/local/bin/rosa create admin --cluster={{ rosa_cluster_name }} |grep 'oc login' | awk '{print $7}'
      register: _r_rosa_admin_create_result

    - name: Get ROSA Information
      ansible.builtin.shell: /usr/local/bin/rosa describe cluster -c {{ rosa_cluster_name }} -o json
      register: _r_rosa_info
    
    - name: Set ROSA cluster information as a fact
      ansible.builtin.set_fact:
        rosa_info: "{{ _r_rosa_info.stdout | from_json }}"

    - name: Show oc login command
      ansible.builtin.debug:
        msg: oc login {{ rosa_info.api.url }} --username cluster-admin --password {{ _r_rosa_admin_create_result.stdout }}

    - name: Authenticate with Kubernetes with cluster-admin user
      community.okd.openshift_auth:
        host: "{{ rosa_info.api.url }}"
        username: "cluster-admin"
        password: "{{ _r_rosa_admin_create_result.stdout }}"
        validate_certs: false
      until: openshift_auth_results.failed == false
      register: openshift_auth_results
      retries: 15
      delay: 60
    
    - name: Log in to OpenShift
      ansible.builtin.shell: oc login {{ rosa_info.api.url }} --username cluster-admin --password {{ _r_rosa_admin_create_result.stdout }} --insecure-skip-tls-verify

    - name: Save OpenShift Details as Secret
      ansible.builtin.shell: aws secretsmanager create-secret --name {{ rosa_cluster_name }}-ocp-creds --description "ROSA Login Details" --secret-string '{"user":"cluster-admin","password":"{{  _r_rosa_admin_create_result.stdout }}"}'

    - name: Create an EFS
      ansible.builtin.shell: /root/ibm-mas-on-aws/scripts/create_efs_rwx_sc.sh {{ rosa_cluster_name }}

    - name: Create Custom Domain
      ansible.builtin.shell: ./scripts/customdomain.sh {{ mas_domain_name }} {{ cert_subject }}

    - name: Deploy MAS Core
      ansible.builtin.shell: /root/ibm-mas-on-aws/scripts/deploy_mascore.sh {{ mas_bucket_name }} {{ rosa_cluster_name }} {{ entitlement_secret }}
      register: _r_mas_install_output

    - name: Set MAS Installation Details as a fact
      ansible.builtin.set_fact:
        mas_url: "{{ _r_mas_install_output | regex_search('^.*Admin Dashboard.....(.*?),.*$', '\\1') | first}}"
        mas_admin_user: "{{ _r_mas_install_output | regex_search('^.*Username............(.*?),.*$', '\\1') | first}}"
        mas_admin_pass: "{{ _r_mas_install_output | regex_search('^.*Password............(.*?).,.*$', '\\1') | first}}"
    
    - name: print
      ansible.builtin.debug:
        msg: "{{ mas_url }}"

    - name: print2
      ansible.builtin.debug:
        msg: "{{ mas_admin_user }}"

    - name: print3
      ansible.builtin.debug:
        msg: "{{ mas_admin_pass }}"
    
    - name: Label the MAS worskpace for Custom Ingress
      ansible.builtin.shell: oc label ns mas-{{ mas_instance_name }}-core ingress=maximo
    
    - name: Label the Manage worskpace for Custom Ingress
      ansible.builtin.shell: oc label ns mas-{{ mas_instance_name }}-manage ingress=maximo
